def findDuplicate(nums):
    slow = nums[-1]
    fast = nums[-1]

    while True:
        slow = nums[slow]
        fast = nums[nums[fast]]

        if slow == fast:
            break

    slow = nums[-1]

    while slow != fast:
        slow = nums[slow]
        fast = nums[fast]
    
    return fast


arr = [0,1,2,3,3,4]

print(findDuplicate(arr))

'''
1...n - значения 0...n индексы -> тогда начинаем с 0
0...(n - 1) - значения 0...n индексы -> тогда начинаем с n
'''

'''
L1 cache - размер около 32кб, доступ 1-2 такта
L2 cache - размер около 256кб, доступ 5 тактов
L3 cache - размер около 10мб, доступ 30 тактов
оперативная память - размер около 16гб, доступ 150 тактов = 50e-9 с
ssd на локальном компьютере - размер около 512гб, доступ 100e-9 с

скорость света 3e-9 на линейный метр
дата центр 100 x 100 метров - 10_000 стоек, 300_000 серверов, 300e+15 байт, доступ 500e-9 c
дата центр 1000 x 1000 метров - 1_000_000 стоек, 30_000_000 серверов, 30e+18 байт, доступ 5000e-9 c

из-за ограниченности скорости света и размещения на плоскости доступ к памяти 0(sqrt(size)), где size размер памяти
если бы можно было иметь дата центр 100 x 100 x 100 метров, то доступ был бы O(cbrt(size)), где size размер памяти, cbrt - корень кубический
'''
